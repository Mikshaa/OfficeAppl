# -*- coding: utf-8 -*-
import os

# Form implementation generated from reading ui file 'C:\Users\Michael\Desktop\design.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtGui import * 
from PyQt5.QtCore import *


curMode = 'Изделие'
curSecondMode = 'Консолидация'
curDeviceCode = 'Не выбрано'
curAmount = 0
inputFilesPath = ''
outputFilesPath = ''
contractFilePath = ''
devicesList = []
devicesTxt = ''

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setFixedSize(1200, 500)

        font = QtGui.QFont()
        font.setFamily("Corbel")
        font.setPointSize(8)
        font.setBold(False)
        font.setWeight(50)
        MainWindow.setFont(font)
        MainWindow.setStyleSheet("background-color: #F5F5F5")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        #############################################

        self.radioButtonDevice = QtWidgets.QRadioButton(self.centralwidget)
        self.radioButtonDevice.setGeometry(QtCore.QRect(40, 120, 130, 40))
        self.radioButtonDevice.setObjectName("radioButton")
        self.radioButtonDevice.toggled.connect(lambda: self.changeMode(mode='device'))

        self.radioButtonContract = QtWidgets.QRadioButton(self.centralwidget)
        self.radioButtonContract.setGeometry(QtCore.QRect(40, 160, 130, 40))
        self.radioButtonContract.setObjectName("radioButton_2")
        #self.radioButtonContract.toggled.connect(lambda: self.changeMode(mode='contract'))
        #############################################

        self.radioButtonConsolid = QtWidgets.QRadioButton(self.centralwidget)
        self.radioButtonConsolid.setGeometry(QtCore.QRect(60, 200, 190, 40))
        self.radioButtonConsolid.setObjectName("radioButton_3")
        self.radioButtonConsolid.setChecked(True)
        self.radioButtonConsolid.setEnabled(False)
        self.radioButtonDelen = QtWidgets.QRadioButton(self.centralwidget)
        self.radioButtonDelen.setGeometry(QtCore.QRect(60, 240, 130, 40))
        self.radioButtonDelen.setObjectName("radioButton_4")
        self.radioButtonDelen.setEnabled(False)
        self.radioButtonConsolid.toggled.connect(lambda: self.changeSecondMode())
        #self.radioButtonDelen.toggled.connect(lambda: self.changeSecondMode())
        #############################################

        self.btngroup1 = QtWidgets.QButtonGroup()
        self.btngroup2 = QtWidgets.QButtonGroup()

        self.btngroup1.addButton(self.radioButtonDevice)
        self.btngroup1.addButton(self.radioButtonContract)
        self.btngroup2.addButton(self.radioButtonConsolid)
        self.btngroup2.addButton(self.radioButtonDelen)
        self.radioButtonDevice.setChecked(True)

        #############################################
        
        self.buttonGenerate = QtWidgets.QPushButton(self.centralwidget)
        self.buttonGenerate.setGeometry(QtCore.QRect(365, 350, 470, 88))
        font = QtGui.QFont()
        font.setFamily("Corbel")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        font.setKerning(False)
        self.buttonGenerate.setFont(font)
        self.buttonGenerate.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.buttonGenerate.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.buttonGenerate.setStyleSheet("QPushButton{\n"
                                        "background-color: #94C7E6;\n"
                                        "border: 1px solid;\n"
                                        "border-color: #000000;\n"
                                        "border-radius: 44px;\n"
                                        "color: #000;\n"
                                        "\n"
                                        "}\n"
                                        "\n"
                                        "")
        self.buttonGenerate.setObjectName("pushButton_3")

        #############################################
        self.labelGetInput = QtWidgets.QLabel(self.centralwidget)
        self.labelGetInput.setGeometry(QtCore.QRect(320, 80, 340, 30))
        font = QtGui.QFont()
        font.setFamily("Corbel")
        font.setPointSize(11)
        self.labelGetInput.setFont(font)
        self.labelGetInput.setObjectName("label")

        #############################################
        
        self.buttonGetOutput = QtWidgets.QPushButton(self.centralwidget)
        self.buttonGetOutput.setGeometry(QtCore.QRect(650, 150, 40, 40))
        self.buttonGetOutput.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.buttonGetOutput.setStyleSheet("border-color: #000;\n"
                                        "border: 1px solid;\n"
                                        "border-radius: 4px;\n"
                                        "background-color: #fff")
        self.buttonGetOutput.clicked.connect(self.getOutputFilesPath)
        self.buttonGetOutput.setObjectName("pushButton_4")

        #############################################
        
        self.buttonGetInput = QtWidgets.QPushButton(self.centralwidget)
        self.buttonGetInput.setGeometry(QtCore.QRect(650, 75, 40, 40))
        self.buttonGetInput.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.buttonGetInput.setStyleSheet("border-color: #000;\n"
                                        "border: 1px solid;\n"
                                        "border-radius: 4px;\n"
                                        "background-color: #fff")
        self.buttonGetInput.clicked.connect(self.getInputFilesPath)
        self.buttonGetInput.setObjectName("pushButton_5")
        
        #############################################
        
        self.labelGetOutput = QtWidgets.QLabel(self.centralwidget)
        self.labelGetOutput.setGeometry(QtCore.QRect(475, 155, 150, 22))
        font = QtGui.QFont()
        font.setFamily("Corbel")
        font.setPointSize(11)
        self.labelGetOutput.setFont(font)
        self.labelGetOutput.setObjectName("label_2")

        #############################################
        
        self.labelDeviceCode = QtWidgets.QLabel(self.centralwidget)
        self.labelDeviceCode.setGeometry(QtCore.QRect(730, 80, 210, 30))
        font = QtGui.QFont()
        font.setFamily("Corbel")
        font.setPointSize(11)
        self.labelDeviceCode.setFont(font)
        self.labelDeviceCode.setObjectName("label_3")

        #############################################

        self.labelContract = QtWidgets.QLabel(self.centralwidget)
        self.labelContract.setGeometry(QtCore.QRect(730, 80, 210, 30))
        font = QtGui.QFont()
        font.setFamily("Corbel")
        font.setPointSize(11)
        self.labelContract.setFont(font)
        self.labelContract.setObjectName("label_6")
        self.labelContract.hide()

        #############################################

        self.buttonGetContract = QtWidgets.QPushButton(self.centralwidget)
        self.buttonGetContract.setGeometry(QtCore.QRect(955, 78, 40, 40))
        self.buttonGetContract.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.buttonGetContract.setStyleSheet("border-color: #000;\n"
                                           "border: 1px solid;\n"
                                           "border-radius: 4px;\n"
                                           "background-color: #fff")
        self.buttonGetContract.clicked.connect(self.getContract)
        self.buttonGetContract.setObjectName("pushButton_4")
        self.buttonGetContract.hide()

        #############################################
        
        self.labelGetAmount = QtWidgets.QLabel(self.centralwidget)
        self.labelGetAmount.setGeometry(QtCore.QRect(775, 155, 162, 22))
        font = QtGui.QFont()
        font.setFamily("Corbel")
        font.setPointSize(11)
        self.labelGetAmount.setFont(font)
        self.labelGetAmount.setObjectName("label_4")

        #############################################
        
        self.comboBoxGetDevice = QtWidgets.QComboBox(self.centralwidget)
        self.comboBoxGetDevice.setEnabled(False)
        self.comboBoxGetDevice.setGeometry(QtCore.QRect(940, 81, 220, 34))
        self.comboBoxGetDevice.addItem('Apple')
        self.comboBoxGetDevice.addItem('banana')
        font = QtGui.QFont()
        font.setFamily("Corbel")
        font.setPointSize(9)
        self.comboBoxGetDevice.setFont(font)
        self.comboBoxGetDevice.setStyleSheet("QComboBox{\n"
                                    "background-color: #fff;\n"
                                    "border: 1px solid;\n"
                                    "border-radius: 4px;\n"
                                    "\n"
                                    "}\n"
                                    "QComboBox::drop-down{\n"
                                    "width: 30px;\n"
                                    "height: 30px;\n"
                                    "top: 0px;\n"
                                    "border: 1px solid;\n"
                                    "border-left: 2px solid;\n"
                                    "border-radius: 3px;\n"
                                    "background-color: #94C7E6;\n"
                                    "\n"
                                    "}\n"
                                    "\n"
                                    "QComboBox::down-arrow{\n"
                                    "image: url(:/img/Polygon 2.svg)\n"
                                    "}\n"
                                    "")

        self.comboBoxGetDevice.setCurrentText("Выберите")
        self.comboBoxGetDevice.setObjectName("comboBox")
        self.comboBoxGetDevice.activated[str].connect(self.deviceCodeChanged)

        #############################################
        
        self.lineEditAmount = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEditAmount.textChanged.connect(self.setAmount)
        self.lineEditAmount.setGeometry(QtCore.QRect(940, 153, 220, 34))
        self.lineEditAmount.setValidator(QIntValidator())
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(10)
        self.lineEditAmount.setFont(font)
        self.lineEditAmount.setStyleSheet("padding-left: 2px;\n"
                                    "top: 0px;\n"
                                    "border: 1px solid;\n"
                                    "border-radius: 3px;\n"
                                    "font-weight: 400;\n"
                                    "background-color: #fff")
        self.lineEditAmount.setObjectName("lineEdit")
        MainWindow.setCentralWidget(self.centralwidget)

        #############################################
        
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def deviceCodeChanged(self, text):
        if 1: #Нужна функция проверки наличия шаблона
            curDeviceCode = text
        else:
            pass
            #Вызов окна ошибки
            
        
    def setAmount(self, amount):
        global curAmount
        curAmount = amount

    def changeMode(self, mode):
        global curMode
        global curSecondMode
        if self.radioButtonDevice.isChecked():
            curMode = 'Device'
            print(curMode)
            self.radioButtonConsolid.setChecked(True)
            self.radioButtonDelen.setChecked(False)
            self.radioButtonConsolid.setEnabled(False)
            self.radioButtonDelen.setEnabled(False)
        else:
            curMode = 'Contract'
            curSecondMode = 'Consolid'
            print(curMode)
            print(curSecondMode)
            self.radioButtonConsolid.setChecked(True)
            self.radioButtonDelen.setChecked(False)
            self.radioButtonConsolid.setEnabled(True)
            self.radioButtonDelen.setEnabled(True)

    def changeSecondMode(self):
        global curSecondMode
        if self.radioButtonConsolid.isChecked():
            curSecondMode = 'Consolid'
        else:
            curSecondMode = 'Delen'
        print(curSecondMode)


    def getContract(self):
        global contractFilePath
        try:
            contractFilePath = QtWidgets.QFileDialog.getOpenFileName()[0]
            if 1: # check contract file на файлы шаблоны
                if 1: # check zeros in contract
                    pass
                else:
                    contractFilePath = ''
                    #Вызов ошибки на нули в контракте
            else:
                contractFilePath = ''
                # Вызов окна ошибки на отстутсвие файлов шаблона
        except:
            pass

    def getInputFilesPath(self):
        global inputFilesPath
        global devicesList
        global devicesTxt
        try:
            inputFilesPath = QtWidgets.QFileDialog.getExistingDirectory()
            if 1: # Check directory
                devicesList = os.listdir(inputFilesPath)
                devicesTxt = devicesList[0]
            else:
                inputFilesPath = ''
                # Вывод ошибки на директорию
        except:
            pass


    def getOutputFilesPath(self):
        global outputFilesPath
        try:
            outputFilesPath = QtWidgets.QFileDialog.getExistingDirectory()
            if 1:  # Check directiory
                pass
            else:
                outputFilesPath = ''
                # Вызов окна ошибки
        except:
            pass




    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.buttonGenerate.setText(_translate("MainWindow", "Сгенерировать"))
        self.labelGetInput.setText(_translate("MainWindow", "Выбор набора шаблонов"))
        self.buttonGetOutput.setText(_translate("MainWindow", "..."))
        self.buttonGetInput.setText(_translate("MainWindow", "..."))
        self.labelGetOutput.setText(_translate("MainWindow", "Сохранять в"))
        self.labelDeviceCode.setText(_translate("MainWindow", "Выбор изделия"))
        self.labelGetAmount.setText(_translate("MainWindow", "Количество"))
        self.labelContract.setText(_translate("MainWindow", "Выбор договора"))
        self.buttonGetContract.setText(_translate("MainWindow", "..."))
        self.radioButtonDevice.setText(_translate("MainWindow", "Изделие"))
        self.radioButtonContract.setText(_translate("MainWindow", "Договор"))
        self.radioButtonConsolid.setText(_translate("MainWindow", "Консолидация"))
        self.radioButtonDelen.setText(_translate("MainWindow", "Деление"))
import rec_rc


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
